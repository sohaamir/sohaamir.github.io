<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://sohaamir.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://sohaamir.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-31T09:20:38+00:00</updated><id>https://sohaamir.github.io/feed.xml</id><title type="html">Aamir Sohail üá¨üáß üáµüá∞</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Forecasting Google Scholar statistics for senior researchers at the Centre for Human Brain Health</title><link href="https://sohaamir.github.io/blog/2024/citation_forecasting/" rel="alternate" type="text/html" title="Forecasting Google Scholar statistics for senior researchers at the Centre for Human Brain Health"/><published>2024-03-23T15:35:00+00:00</published><updated>2024-03-23T15:35:00+00:00</updated><id>https://sohaamir.github.io/blog/2024/citation_forecasting</id><content type="html" xml:base="https://sohaamir.github.io/blog/2024/citation_forecasting/"><![CDATA[<p>Note: this guide is also available on the corresponding GitHub <a href="https://github.com/sohaamir/chbh_google_scholar">repository</a>, where all the required code is freely available.</p> <p>This is a detailed guide for performing the extraction and forecasting of Google Scholar data for researchers at the Centre for Human Brain Health (CHBH), University of Birmingham.</p> <p>Specficially, this involves</p> <ul> <li>Scraping a list of researchers at the CHBH from the CHBH website (using <code class="language-plaintext highlighter-rouge">beautifulsoup4</code> ).</li> <li>Extracting Google Scholar statistics including citation data (using <code class="language-plaintext highlighter-rouge">serpapi</code> ).</li> <li>Forecasting citations for the years 2024, 2025 and 2026 (using <code class="language-plaintext highlighter-rouge">prophet</code>).</li> </ul> <h3 id="extracting-data-from-the-chbh-website">Extracting data from the CHBH website</h3> <p>The first step is to get a list of names for researchers at the CHBH. We could do this in a bunch of different ways, but one way is to use <code class="language-plaintext highlighter-rouge">beautifulsoup4</code> to extract names from six pages on the CHBH website that list senior researchers.</p> <p>Here is how the webpages display the researcher‚Äôs information (six pages in total):</p> <p><img src="/assets/img/posts/citation_forecasting/chbh_website_pis.png" alt="chbh_website_pis" style="width: 100%;"/> <br/> <br/> And here is the code which extract the names <code class="language-plaintext highlighter-rouge">scrape_chbh.py</code> which it iterates over the list of URLs, and extracts names using the BeautifulSoup library to parse the HTML content. Importantly, the script also filters and cleans these names by removing titles like ‚ÄúDr‚Äù and ‚ÄúProfessor‚Äù. <br/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">requests</span>
<span class="kn">from</span> <span class="n">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="kn">import</span> <span class="n">json</span>

<span class="k">def</span> <span class="nf">scrape_names_from_page</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="nc">BeautifulSoup</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">content</span><span class="p">,</span> <span class="sh">'</span><span class="s">html.parser</span><span class="sh">'</span><span class="p">)</span>

    <span class="c1"># Find all elements that contain names - this will need to be customized based on the page's HTML structure
</span>    <span class="n">name_elements</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="sh">'</span><span class="s">h2</span><span class="sh">'</span><span class="p">)</span>  <span class="c1"># Assuming names are within &lt;h2&gt; tags, change as needed
</span>
    <span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="n">elem</span><span class="p">.</span><span class="nf">get_text</span><span class="p">(</span><span class="n">strip</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">name_elements</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">names</span>

<span class="c1"># List of URLs to scrape
</span><span class="n">urls</span> <span class="o">=</span> <span class="p">[</span>
    <span class="sh">"</span><span class="s">https://www.birmingham.ac.uk/research/centre-for-human-brain-health/chbh-research-themes/lifespan-and-brain-health</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">https://www.birmingham.ac.uk/research/centre-for-human-brain-health/chbh-research-themes/cognitive-computational-neuroscience</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">https://www.birmingham.ac.uk/research/centre-for-human-brain-health/chbh-research-themes/social-interaction-and-communication</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">https://www.birmingham.ac.uk/research/centre-for-human-brain-health/chbh-research-themes/learning-memory-and-performance</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">https://www.birmingham.ac.uk/research/centre-for-human-brain-health/chbh-research-themes/awareness-consciousness-and-sleep</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">https://www.birmingham.ac.uk/research/centre-for-human-brain-health/chbh-research-themes/neuroimaging-methods-and-ai</span><span class="sh">"</span>
<span class="p">]</span>

<span class="c1"># Initialize an empty set to hold all unique names across themes
</span><span class="n">unique_names</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>

<span class="c1"># Scrape names from each URL
</span><span class="k">for</span> <span class="n">url</span> <span class="ow">in</span> <span class="n">urls</span><span class="p">:</span>
    <span class="n">names</span> <span class="o">=</span> <span class="nf">scrape_names_from_page</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">names</span><span class="p">:</span>
        <span class="k">if</span> <span class="sh">'</span><span class="s">Dr </span><span class="sh">'</span> <span class="ow">in</span> <span class="n">name</span> <span class="ow">or</span> <span class="sh">'</span><span class="s">Professor </span><span class="sh">'</span> <span class="ow">in</span> <span class="n">name</span><span class="p">:</span>
            <span class="c1"># Clean name and add to the set of unique names
</span>            <span class="n">clean_name</span> <span class="o">=</span> <span class="n">name</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">Dr </span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">Professor </span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>
            <span class="n">unique_names</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">clean_name</span><span class="p">)</span>
</code></pre></div></div> <p><br/> This gives us a list of CHBH researchers (<code class="language-plaintext highlighter-rouge">chbh_names.json</code>).</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"chbh-investigators"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="s2">"Alan Wing"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Andrea Krott"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Kim Shapiro"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Craig McAllister"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Clare Anderson"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Rachel Upthegrove"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Dietmar Heinke"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Lei Zhang"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Magda Chechlacz"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Joseph Galea"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Massimiliano (Max) Di Luca"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Jennifer Cook"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Matthew Apps"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"KyungMin An"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Katja Kornysheva"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Andrew J. Bremner"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Ali Mazaheri"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Hamid Dehghani"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Damian Cruse"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Patricia Lockwood"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Ned Jenkinson"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Tom Rhys Marshall"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Chris Miall"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Stephane De Brito"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Romy Froemer"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Anna Kowalczyk"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Suzanne Higgs"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Sarah Aldred"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Andrew Bagshaw"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Rickson C. Mesquita"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Martin Wilson"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Davinia Fern√°ndez-Espejo"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Andrew Quinn"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Hyojin Park"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Karen Mullinger"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Arkady Konovalov"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Felipe Orihuela-Espina"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Carmel Mevorach"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Paul Muhle-Karbe"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Clayton Hickey"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Katrien Segaert"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Nick Holmes"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Sam Lucas"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Ole Jensen"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Barbara Pomiechowska"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Jian Liu"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"Steven Frisson"</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p><br/></p> <h2 id="extracting-google-scholar-data-using-serpapi">Extracting Google Scholar data using SerpAPI</h2> <p><a href="https://serpapi.com/">SerpAPI</a> is a tool that provides developers with an API to scrape and parse search engine results pages (SERPs) from various search engines like Google, Bing, and others, automating the process of extracting search data.</p> <p>SerpAPI offers a range of APIs for Google services, including: Google Search API, Google Images API, Google News API, Google Shopping API, and relevant for this exercise, <strong>Google Scholar API</strong>. It has a free tier, but restricts users to only 100 calls per month, so use them wisely!</p> <p><img src="/assets/img/posts/citation_forecasting/serpapi.png" alt="serpapi" style="width: 100%;"/> <br/> <br/> Importantly, SerpAPI works using Google Scholar ID‚Äôs and not on the researchers names. You can see the ID within the URL when on the researchers profile page. For example, Lei Zhang‚Äôs ID is XmnVUTQAAAAJ.</p> <p><img src="/assets/img/posts/citation_forecasting/lei_scholar_id.png" alt="lei_scholar_id" style="width: 100%;"/> <br/> <br/> I could have written a script to extract this for the researchers using SerpAPI, but given that there are 42 of them, and that I am limited to 100 requests per month (and I‚Äôll need at least 42 for the actual extraction), I just decided to do this manually, creating a csv file <code class="language-plaintext highlighter-rouge">names_and_citation_ids.csv</code> which I then filtered by removing those with no Scholar ID. The final data is <code class="language-plaintext highlighter-rouge">filtered_names_and_citations_ids.csv</code> which looks like this:</p> <pre><code class="language-csv">name,citation_id
Alan Wing,JEihq_0AAAAJ
Andrea Krott,Hfg7LVkAAAAJ
Kim Shapiro,RO_OKQwAAAAJ
Craig McAllister,KFT9l3wAAAAJ
Clare Anderson,MHtyzVoAAAAJ
Rachel Upthegrove,Z1kBsNIAAAAJ
Dietmar Heinke,uExP9ScAAAAJ
Lei Zhang,XmnVUTQAAAAJ
Magda Chechlacz,DSIp5Mh1f3oC
Joseph Galea,xVLhU5kAAAAJ
</code></pre> <p><br/></p> <h4 id="extracting-the-citation-statistics">Extracting the Citation statistics</h4> <p>We can now perform the extraction! Here is the important part of the code which does this (<code class="language-plaintext highlighter-rouge">extract_scholar_info.py</code>). You will need to provide your own SerpAPI Key for the script to work! The input for this script comes from the CSV file just created named <code class="language-plaintext highlighter-rouge">filtered_names_and_citation_ids.csv</code>, and loops through each row, performing the extraction on each <code class="language-plaintext highlighter-rouge">citation_id</code>. The script processes these IDs, retrieves the relevant data for each author, and saves this information in a separate JSON file named after the author‚Äôs citation ID.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">serpapi</span>
<span class="kn">import</span> <span class="n">json</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="k">def</span> <span class="nf">author_results</span><span class="p">(</span><span class="n">author_id</span><span class="p">):</span>
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Extracting author results for author ID: </span><span class="si">{</span><span class="n">author_id</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>

    <span class="n">params</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">api_key</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">SERP_API_KEY</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># Replace with your actual SerpApi API key
</span>        <span class="sh">"</span><span class="s">engine</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">google_scholar_author</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># Author results search engine
</span>        <span class="sh">"</span><span class="s">author_id</span><span class="sh">"</span><span class="p">:</span> <span class="n">author_id</span><span class="p">,</span>  <span class="c1"># Author ID as function input
</span>        <span class="sh">"</span><span class="s">hl</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">en</span><span class="sh">"</span>
    <span class="p">}</span>
    
    <span class="n">search</span> <span class="o">=</span> <span class="n">serpapi</span><span class="p">.</span><span class="nf">search</span><span class="p">(</span><span class="n">params</span><span class="p">)</span> 
    <span class="n">results</span> <span class="o">=</span> <span class="n">search</span>  <span class="c1"># Directly use the 'results'
</span>
    <span class="c1"># Extract the necessary information
</span>    <span class="n">thumbnail</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">author</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">thumbnail</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">author</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">name</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">affiliations</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">author</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">affiliations</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">email</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">author</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">email</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">website</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">author</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">website</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">interests</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">author</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">interests</span><span class="sh">"</span><span class="p">)</span>
    
    <span class="n">cited_by_table</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">cited_by</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">table</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">cited_by_graph</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">cited_by</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">graph</span><span class="sh">"</span><span class="p">)</span>
    
    <span class="n">public_access_link</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">public_access</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">link</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">available_public_access</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">public_access</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">available</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">not_available_public_access</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">public_access</span><span class="sh">"</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">not_available</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">co_authors</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">co_authors</span><span class="sh">"</span><span class="p">)</span>
    
    <span class="n">author_results_data</span> <span class="o">=</span> <span class="p">{</span>
      <span class="sh">"</span><span class="s">thumbnail</span><span class="sh">"</span><span class="p">:</span> <span class="n">thumbnail</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">name</span><span class="sh">"</span><span class="p">:</span> <span class="n">name</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">affiliations</span><span class="sh">"</span><span class="p">:</span> <span class="n">affiliations</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">email</span><span class="sh">"</span><span class="p">:</span> <span class="n">email</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">website</span><span class="sh">"</span><span class="p">:</span> <span class="n">website</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">interests</span><span class="sh">"</span><span class="p">:</span> <span class="n">interests</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">cited_by_table</span><span class="sh">"</span><span class="p">:</span> <span class="n">cited_by_table</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">cited_by_graph</span><span class="sh">"</span><span class="p">:</span> <span class="n">cited_by_graph</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">public_access_link</span><span class="sh">"</span><span class="p">:</span> <span class="n">public_access_link</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">available_public_access</span><span class="sh">"</span><span class="p">:</span> <span class="n">available_public_access</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">not_available_public_access</span><span class="sh">"</span><span class="p">:</span> <span class="n">not_available_public_access</span><span class="p">,</span>
      <span class="sh">"</span><span class="s">co_authors</span><span class="sh">"</span><span class="p">:</span> <span class="n">co_authors</span>
    <span class="p">}</span>
    
    <span class="c1"># Save the data to a JSON file named after the author_id
</span>    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">author_id</span><span class="si">}</span><span class="s">.json</span><span class="sh">"</span><span class="p">,</span> <span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">json</span><span class="p">.</span><span class="nf">dump</span><span class="p">(</span><span class="n">author_results_data</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">ensure_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
    
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Data saved to </span><span class="si">{</span><span class="n">author_id</span><span class="si">}</span><span class="s">.json</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">author_results_data</span> 
</code></pre></div></div> <p>The individual JSON files contains information contained within one‚Äôs Scholar Page. We can do a whole range of potential analyses, but we are interested in just using the citation statistics for now.</p> <p><img src="/assets/img/posts/citation_forecasting/pat_scholar_profile.png" alt="pat_scholar_profile" style="width: 100%;"/></p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"thumbnail"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.googleusercontent.com/citations?view_op=view_photo&amp;user=ynN6pG0AAAAJ&amp;citpid=9"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Patricia Lockwood"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"affiliations"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Associate Professor, Sir Henry Dale Fellow &amp; Jacobs Fellow, University of Birmingham"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Verified email at bham.ac.uk"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"website"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://www.sdn-lab.org/"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"interests"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cognitive neuroscience"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?view_op=search_authors&amp;hl=en&amp;mauthors=label:cognitive_neuroscience"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?engine=google_scholar_profiles&amp;hl=en&amp;mauthors=label%3Acognitive_neuroscience"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"social neuroscience"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?view_op=search_authors&amp;hl=en&amp;mauthors=label:social_neuroscience"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?engine=google_scholar_profiles&amp;hl=en&amp;mauthors=label%3Asocial_neuroscience"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"decision neuroscience"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?view_op=search_authors&amp;hl=en&amp;mauthors=label:decision_neuroscience"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?engine=google_scholar_profiles&amp;hl=en&amp;mauthors=label%3Adecision_neuroscience"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"learning"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?view_op=search_authors&amp;hl=en&amp;mauthors=label:learning"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?engine=google_scholar_profiles&amp;hl=en&amp;mauthors=label%3Alearning"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"lifespan"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?view_op=search_authors&amp;hl=en&amp;mauthors=label:lifespan"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?engine=google_scholar_profiles&amp;hl=en&amp;mauthors=label%3Alifespan"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="nl">"cited_by_table"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"all"</span><span class="p">:</span><span class="w"> </span><span class="mi">4773</span><span class="p">,</span><span class="w">
                </span><span class="nl">"since_2019"</span><span class="p">:</span><span class="w"> </span><span class="mi">3566</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"h_index"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"all"</span><span class="p">:</span><span class="w"> </span><span class="mi">29</span><span class="p">,</span><span class="w">
                </span><span class="nl">"since_2019"</span><span class="p">:</span><span class="w"> </span><span class="mi">29</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"i10_index"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"all"</span><span class="p">:</span><span class="w"> </span><span class="mi">41</span><span class="p">,</span><span class="w">
                </span><span class="nl">"since_2019"</span><span class="p">:</span><span class="w"> </span><span class="mi">40</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="nl">"cited_by_graph"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2013</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">40</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2014</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">103</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2015</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">126</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2016</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">214</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2017</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">289</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2018</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">396</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2019</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">342</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2020</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">431</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2021</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">776</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2022</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">874</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2023</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">924</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2024</span><span class="p">,</span><span class="w">
            </span><span class="nl">"citations"</span><span class="p">:</span><span class="w"> </span><span class="mi">200</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="nl">"public_access_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?view_op=list_mandates&amp;hl=en&amp;user=ynN6pG0AAAAJ"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"available_public_access"</span><span class="p">:</span><span class="w"> </span><span class="mi">59</span><span class="p">,</span><span class="w">
    </span><span class="nl">"not_available_public_access"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"co_authors"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Matthew Apps"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?user=ZTqTFbwAAAAJ&amp;hl=en"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?author_id=ZTqTFbwAAAAJ&amp;engine=google_scholar_author&amp;hl=en"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"author_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ZTqTFbwAAAAJ"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"affiliations"</span><span class="p">:</span><span class="w"> </span><span class="s2">"BBSRC Fellow, &amp; Senior Research Fellow (=Associate Professor)"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Verified email at bham.ac.uk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"thumbnail"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations/images/avatar_scholar_56.png"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Essi Viding"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?user=Ydwv2DYAAAAJ&amp;hl=en"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?author_id=Ydwv2DYAAAAJ&amp;engine=google_scholar_author&amp;hl=en"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"author_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Ydwv2DYAAAAJ"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"affiliations"</span><span class="p">:</span><span class="w"> </span><span class="s2">"UCL"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Verified email at ucl.ac.uk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"thumbnail"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.googleusercontent.com/citations?view_op=small_photo&amp;user=Ydwv2DYAAAAJ&amp;citpid=13"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Masud Husain"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.google.com/citations?user=_GXoXKMAAAAJ&amp;hl=en"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"serpapi_link"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://serpapi.com/search.json?author_id=_GXoXKMAAAAJ&amp;engine=google_scholar_author&amp;hl=en"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"author_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"_GXoXKMAAAAJ"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"affiliations"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Professor of Neurology &amp; Cognitive Neuroscience, Oxford. Editor-in-Chief, Brain"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Verified email at ndcn.ox.ac.uk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"thumbnail"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://scholar.googleusercontent.com/citations?view_op=small_photo&amp;user=_GXoXKMAAAAJ&amp;citpid=34"</span><span class="w">
        </span><span class="p">},</span><span class="w">
  </span><span class="err">(and</span><span class="w"> </span><span class="err">so</span><span class="w"> </span><span class="err">on)</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>We can then simply extract this data across all JSON files by running <code class="language-plaintext highlighter-rouge">processing_citation_data.py</code></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">json</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c1"># List all JSON files in the current directory
</span><span class="n">json_files</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="nf">listdir</span><span class="p">(</span><span class="sh">'</span><span class="s">.</span><span class="sh">'</span><span class="p">)</span> <span class="k">if</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">isfile</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="ow">and</span> <span class="n">f</span><span class="p">.</span><span class="nf">endswith</span><span class="p">(</span><span class="sh">'</span><span class="s">.json</span><span class="sh">'</span><span class="p">)]</span>

<span class="c1"># Initialize a list to store data for each author
</span><span class="n">authors_data</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1"># Process each JSON file
</span><span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">json_files</span><span class="p">:</span>
    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
        <span class="n">data</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
        
        <span class="c1"># Extracting required information
</span>        <span class="n">name</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">name</span><span class="sh">'</span><span class="p">]</span>
        <span class="n">citations_all</span> <span class="o">=</span> <span class="nf">next</span><span class="p">((</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">cited_by_table</span><span class="sh">'</span><span class="p">]</span> <span class="k">if</span> <span class="sh">'</span><span class="s">citations</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">item</span><span class="p">),</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">citations</span><span class="sh">'</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">all</span><span class="sh">'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">h_index_all</span> <span class="o">=</span> <span class="nf">next</span><span class="p">((</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">cited_by_table</span><span class="sh">'</span><span class="p">]</span> <span class="k">if</span> <span class="sh">'</span><span class="s">h_index</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">item</span><span class="p">),</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">h_index</span><span class="sh">'</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">all</span><span class="sh">'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">i10_index_all</span> <span class="o">=</span> <span class="nf">next</span><span class="p">((</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">cited_by_table</span><span class="sh">'</span><span class="p">]</span> <span class="k">if</span> <span class="sh">'</span><span class="s">i10_index</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">item</span><span class="p">),</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">i10_index</span><span class="sh">'</span><span class="p">,</span> <span class="p">{}).</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">all</span><span class="sh">'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        
        <span class="c1"># Initialize a dict for the author's citation years data
</span>        <span class="n">citation_years</span> <span class="o">=</span> <span class="p">{</span><span class="sh">'</span><span class="s">name</span><span class="sh">'</span><span class="p">:</span> <span class="n">name</span><span class="p">,</span> <span class="sh">'</span><span class="s">citations</span><span class="sh">'</span><span class="p">:</span> <span class="n">citations_all</span><span class="p">,</span> <span class="sh">'</span><span class="s">h-index</span><span class="sh">'</span><span class="p">:</span> <span class="n">h_index_all</span><span class="p">,</span> <span class="sh">'</span><span class="s">i10-index</span><span class="sh">'</span><span class="p">:</span> <span class="n">i10_index_all</span><span class="p">}</span>
        
        <span class="c1"># Add citation count per year to the dict
</span>        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">cited_by_graph</span><span class="sh">'</span><span class="p">]:</span>
            <span class="n">year</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">year</span><span class="sh">'</span><span class="p">]</span>
            <span class="n">citations</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">citations</span><span class="sh">'</span><span class="p">]</span>
            <span class="n">citation_years</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">citations_</span><span class="si">{</span><span class="n">year</span><span class="si">}</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">citations</span>
        
        <span class="c1"># Append the author's data to the list
</span>        <span class="n">authors_data</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">citation_years</span><span class="p">)</span>

<span class="c1"># Convert the list of data into a DataFrame
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">authors_data</span><span class="p">)</span>

<span class="c1"># Fill NaN values with 0 to indicate years without citations
</span><span class="n">df</span><span class="p">.</span><span class="nf">fillna</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># Save the DataFrame to a CSV file
</span><span class="n">df</span><span class="p">.</span><span class="nf">to_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">../data/citations_statistics/citation_statistics.csv</span><span class="sh">'</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <p>Which creates the <code class="language-plaintext highlighter-rouge">citation_statistics.csv</code>, containing all the citation statistics for all researchers! <br/> <br/></p> <h3 id="forecasting-future-citations-using-prophet">Forecasting future citations using Prophet</h3> <p>There are many different approaches we can use to forecast the number of citations a researcher will get in the future. I will be using <code class="language-plaintext highlighter-rouge">prophet</code>, a open-source forecasting tool developed by Facebook and designed for ease of use and handling the complexities of daily, weekly, and yearly seasonal patterns.</p> <blockquote> <p>Note, that I am not using Prophet because it‚Äôs the most accurate or even the most suitable for this data, I just wanted to try it out!</p> </blockquote> <h4 id="working-with-the-jupyter-notebook-for-plotting">Working with the Jupyter Notebook for plotting</h4> <p>The code for subsetting the data, forecasting and plotting the forecasted plots are available in <code class="language-plaintext highlighter-rouge">plotting_chbh_statistics.ipynb</code>.</p> <p>You will need to install a kernel for Jupyter Notebooks within the virtual environment:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">ipykernel</span> <span class="n">install</span> <span class="o">--</span><span class="n">user</span> <span class="o">--</span><span class="n">name</span><span class="o">=</span><span class="p">.</span><span class="n">venv</span>
</code></pre></div></div> <p>and then can run the Jupyter Notebook.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">notebook</span>
</code></pre></div></div> <p>The notebook firstly plots the csv data as is, generating citation numbers over time for all researchers:</p> <p><img src="/assets/img/posts/citation_forecasting/citations_plot.png" alt="chbh_citations" style="width:100%;"/></p> <p>We can then run our predictive model. This function processes the citation data to fit the <code class="language-plaintext highlighter-rouge">prophet</code> model, predicts citations for the years 2024, 2025, and 2026, and returns these predictions. After applying the forecasting function to each row in the dataset, the script calculates cumulative citations for each year, including the forecasted years, and appends these cumulative citations to the original dataset.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="n">prophet</span> <span class="kn">import</span> <span class="n">Prophet</span>

<span class="c1"># Load the data from the CSV file
</span><span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">../data/citation_stats/citation_statistics.csv</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># Remove the 'citations_2024' column
</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">citations_2024</span><span class="sh">'</span><span class="p">])</span>

<span class="c1"># Function to perform forecasting for each person
</span><span class="k">def</span> <span class="nf">forecast_citations</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
    <span class="c1"># Extract the relevant citation columns
</span>    <span class="n">citation_cols</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">row</span><span class="p">.</span><span class="n">index</span> <span class="k">if</span> <span class="n">col</span><span class="p">.</span><span class="nf">startswith</span><span class="p">(</span><span class="sh">'</span><span class="s">citations_</span><span class="sh">'</span><span class="p">)]</span>
    
    <span class="c1"># Create a dataframe with the citation data
</span>    <span class="n">citation_data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">ds</span><span class="sh">'</span><span class="p">:</span> <span class="n">citation_cols</span><span class="p">,</span> <span class="sh">'</span><span class="s">y</span><span class="sh">'</span><span class="p">:</span> <span class="n">row</span><span class="p">[</span><span class="n">citation_cols</span><span class="p">]})</span>
    
    <span class="c1"># Remove rows with zero citations
</span>    <span class="n">citation_data</span> <span class="o">=</span> <span class="n">citation_data</span><span class="p">[</span><span class="n">citation_data</span><span class="p">[</span><span class="sh">'</span><span class="s">y</span><span class="sh">'</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">]</span>
    
    <span class="c1"># Convert the 'ds' column to datetime by extracting the year from the column name
</span>    <span class="n">citation_data</span><span class="p">[</span><span class="sh">'</span><span class="s">ds</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">to_datetime</span><span class="p">(</span><span class="n">citation_data</span><span class="p">[</span><span class="sh">'</span><span class="s">ds</span><span class="sh">'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">'</span><span class="s">_</span><span class="sh">'</span><span class="p">).</span><span class="nb">str</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nb">format</span><span class="o">=</span><span class="sh">'</span><span class="s">%Y</span><span class="sh">'</span><span class="p">)</span>
    
    <span class="c1"># Create a Prophet model
</span>    <span class="n">model</span> <span class="o">=</span> <span class="nc">Prophet</span><span class="p">()</span>
    
    <span class="c1"># Fit the model to the citation data
</span>    <span class="n">model</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">citation_data</span><span class="p">)</span>
    
    <span class="c1"># Generate future dates for forecasting
</span>    <span class="n">future_dates</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">ds</span><span class="sh">'</span><span class="p">:</span> <span class="p">[</span><span class="sh">'</span><span class="s">2024-01-01</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">2025-01-01</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">2026-01-01</span><span class="sh">'</span><span class="p">]})</span>
    
    <span class="c1"># Make predictions for the future dates
</span>    <span class="n">forecast</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="nf">predict</span><span class="p">(</span><span class="n">future_dates</span><span class="p">)</span>
    
    <span class="c1"># Extract the forecasted values
</span>    <span class="n">predicted_values</span> <span class="o">=</span> <span class="n">forecast</span><span class="p">[</span><span class="sh">'</span><span class="s">yhat</span><span class="sh">'</span><span class="p">].</span><span class="n">values</span>
    
    <span class="k">return</span> <span class="n">pd</span><span class="p">.</span><span class="nc">Series</span><span class="p">(</span><span class="n">predicted_values</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">prediction_2024</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">prediction_2025</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">prediction_2026</span><span class="sh">'</span><span class="p">])</span>

<span class="c1"># Apply the forecasting function to each row
</span><span class="n">data</span><span class="p">[[</span><span class="sh">'</span><span class="s">prediction_2024</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">prediction_2025</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">prediction_2026</span><span class="sh">'</span><span class="p">]]</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="n">forecast_citations</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Get the citation columns
</span><span class="n">citation_cols</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">data</span><span class="p">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">col</span><span class="p">.</span><span class="nf">startswith</span><span class="p">(</span><span class="sh">'</span><span class="s">citations_</span><span class="sh">'</span><span class="p">)]</span>

<span class="c1"># Sort the citation columns in ascending order
</span><span class="n">citation_cols</span> <span class="o">=</span> <span class="nf">sorted</span><span class="p">(</span><span class="n">citation_cols</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="nf">int</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">'</span><span class="s">_</span><span class="sh">'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]))</span>

<span class="c1"># Create a new DataFrame to store the cumulative citations
</span><span class="n">cumulative_data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>

<span class="c1"># Calculate the cumulative citations for each year
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">citation_cols</span><span class="p">)):</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">cumulative_data</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">cumulative_</span><span class="si">{</span><span class="n">citation_cols</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">_</span><span class="sh">"</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="n">citation_cols</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">cumulative_data</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">cumulative_</span><span class="si">{</span><span class="n">citation_cols</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">_</span><span class="sh">"</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">cumulative_data</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">cumulative_</span><span class="si">{</span><span class="n">citation_cols</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">_</span><span class="sh">"</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">data</span><span class="p">[</span><span class="n">citation_cols</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span>

<span class="c1"># Calculate the cumulative citations for the predicted years
</span><span class="n">cumulative_data</span><span class="p">[</span><span class="sh">'</span><span class="s">cumulative_2024</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">cumulative_data</span><span class="p">[</span><span class="sa">f</span><span class="sh">'</span><span class="s">cumulative_</span><span class="si">{</span><span class="n">citation_cols</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">_</span><span class="sh">"</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">prediction_2024</span><span class="sh">'</span><span class="p">]</span>
<span class="n">cumulative_data</span><span class="p">[</span><span class="sh">'</span><span class="s">cumulative_2025</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">cumulative_data</span><span class="p">[</span><span class="sh">'</span><span class="s">cumulative_2024</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">prediction_2025</span><span class="sh">'</span><span class="p">]</span>
<span class="n">cumulative_data</span><span class="p">[</span><span class="sh">'</span><span class="s">cumulative_2026</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">cumulative_data</span><span class="p">[</span><span class="sh">'</span><span class="s">cumulative_2025</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">prediction_2026</span><span class="sh">'</span><span class="p">]</span>

<span class="c1"># Concatenate the original data with the cumulative citations
</span><span class="n">updated_data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">data</span><span class="p">,</span> <span class="n">cumulative_data</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Save the updated data to the same CSV file
</span><span class="n">updated_data</span><span class="p">.</span><span class="nf">to_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">citation_statistics_with_predictions.csv</span><span class="sh">'</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div> <p>After calculating the cumulative citations for the predicted years (2024, 2025 and 2026), we can plot the predicted citation number, as well as the cumulative predicted citations for these years:</p> <p><img src="/assets/img/posts/citation_forecasting/lei_cumulative_plot.png" alt="lei_cumulative_plot" style="width: 100%;"/></p> <p><img src="/assets/img/posts/citation_forecasting/lei_yearly_plot.png" alt="lei_yearly_plot" style="width: 100%;"/></p> <p>These are displayed using <code class="language-plaintext highlighter-rouge">plotly</code> within the Jupyter notebook, which are interactive plots.</p> <h4 id="how-accurate-are-the-predictions">How accurate are the predictions?</h4> <p>It‚Äôs all well to use a model in making some prediction, but how accurate is that model? The final section of the notebook calculates predictions for the year 2023 (the last year where complete yearly citation data are available) and compares this prediction to the actual values across all researchers.</p> <p>Ultimately, the model has an accuracy of <strong>80.63%</strong>, which whilst good, isn‚Äôt great.</p> <p><strong>Congratulations, you just extracted data from a website, ran forecasting models and created interactive plots!</strong></p>]]></content><author><name></name></author><category term="tutorials"/><category term="python,"/><category term="CHBH,"/><category term="forecasting,"/><category term="beautifulsoup4,"/><category term="serpapi,"/><category term="prophet"/><summary type="html"><![CDATA[A detailed guide on how to extract and predict Google Scholar citations using beautifulsoup4, SerpAPI and Prophet]]></summary></entry><entry><title type="html">The evolving concept of diagnostic classification in psychiatry</title><link href="https://sohaamir.github.io/blog/2024/psych_classification/" rel="alternate" type="text/html" title="The evolving concept of diagnostic classification in psychiatry"/><published>2024-01-15T13:56:00+00:00</published><updated>2024-01-15T13:56:00+00:00</updated><id>https://sohaamir.github.io/blog/2024/psych_classification</id><content type="html" xml:base="https://sohaamir.github.io/blog/2024/psych_classification/"><![CDATA[<p><em>Mental health disorders are typically assessed using a broadly defined classification, through diagnostic manuals such as the DSM or ICD. However, this approach has recently been criticised due to its repetitional nature, low descriptive power of patient heterogeneity, and inability to map on to the underlying cognitive mechanisms. In this post I briefly discuss the historical origins of the diagnostic manual, summarise recent alternative frameworks.</em> <br/> <br/></p> <h2 id="a-very-brief-history-of-psychiatry">A (very) brief history of psychiatry</h2> <p>In antiquity, one of the key philosophical questions pertained to how the human body functioned. There were two main schools of thought. The first was the ‚ÄòCardiocentric view‚Äô popularised by Aristotle and endorsed by other prominent Greek thinkers including Diocles and Praxagoras. This view was substantiated by Aristotle on a number of points including ‚Äòthe lack of sense organs‚Äô within the brain, as well as it‚Äôs plain visual appearance and inability of feeling (Frampton, 1991). The second view was the ‚ÄòCephalocentric view‚Äô which posited the brain was instead the primary source of human behaviour and emotion. Interestingly this correct interpretation predates the cardiocentric view, with Alcmaeon of Croton in the 5th century B.C. being the initial proponent. It is for this reason that he is often called the ‚ÄòFather of Neuroscience‚Äô. By extension, he may also be dubbed the ‚ÄòFather of Psychiatry‚Äô in that he also was the first to distinguish a neurological condition as having a non-divine cause. He did so with reference to epilepsy (Debernardi et al., 2010), a view which would influence other prominent Greek physicans including Hippocrates.</p> <p>Moving to the 18th century, a different figurehead, Benjamin Rush (‚ÄòThe Father of American Psychiatry‚Äô) was an initial supporter of patient-centric treatment of mental health conditions (Farr, 1944). The period encompassing the 17th and 18th centuries often represents a negative viewpoint of mental health, with patients committed to insane asylums, chained to their beds and not quizzed regarding their condition. Rush instead sought to engage with patients, as this would give a more detailed overview of their condition. Wilhelm Griseinger then built upon this further by introducing the concept of a ‚Äòpathophysiology‚Äô where mental disorders were the product of physiological changes in the body and brain. He also suggested that symptoms at different time points may in fact be caused by time-varying effects of the same condition (Marx, 1972). And finally, it was Emil Kraepelin who was the first to practically develop and introduce the concept of ‚Äòdiagnostic classification‚Äô (at least in the conventional categorical sense). This stems from his work with psychosis, to which his opinion differed from popular opinion at the time. Namely, Kraepelin did not believe that certain symptoms were characteristic for specific illnesses, rather that that specific combinations of symptoms and the time-course could be used to identify them instead (Ebert &amp; Bar, 2010). <br/> <br/></p> <h2 id="the-development-of-modern-classification-systems">The development of modern classification systems</h2> <p>It is important to understand the historical origins of psychiatry because they have directly influenced the modern systems that we use. For example, the Fifth Edition of the Diagnostic and Statistical Manual of Mental Disorders (DSM-V) is the primary diagnostic manual used in the diagnosis of mental disorders in North America. It is developed in an iterative process from earlier versions, which they themselves are influenced by earlier-still diagnostic manuals. For example, the Schneideran First Rank symptoms for schizophrenia developed by Kurt Schnieder in 1950, subsequently influenced Spitzer‚Äôs initial classification in the DSM-III three decades later (Kendler, 2009).</p> <p>There are additional limitations based in history. The developers of such classification systems were in a relative state of ignorance regarding the (as we now understand) incredibly complex etiology of mental health disorders. This was reflected in the ‚Äòessentialist view‚Äô a now-challenged framework, viewing mental health disorders are being caused by some shared essential criterion (Kendler, 2010; Adriens and De Block, 2013). In addition, there is the tendency to project a priori beliefs about the things they are classifying, and the nature and goals of those classifications (Kendler, 2009). <br/></p> <p>Current treatments for mental health disorders demonstrate a success rate far behind what is necessary to keep up with the concurrent increase in prevalence. This lack of efficacy is partly a consequence of the current methods used to classify, diagnose and treat mental health disorders, primarily diagnostic manuals such as the DSM and ICD, which have been the subject of scrutiny in recent years due to its repetitional nature (Forbes et al., 2023), low descriptive power of patient heterogeneity, and inability to map on to the underlying cognitive mechanisms. Subsequently, there are a number of alternative approaches, more strongly rooted in modern definitions of symptomatology. These include the Research Domain Criteria (RDoC, Insel et al., 2010), the Network Theory of Mental Disorders (Borsboom, 2017) and the Hierarchical Taxonomy of Psychopathology (Kotov, 2017). Each of these, whilst slightly different in their approach, aim to incorporate multiple ‚Äòlayers‚Äô of influence when considering the etiology and development on mental health conditions, and appreciates their transdiagnostic nature.</p> <p>The RDoC for example uses a core of five domains each capturing a distinct range of cognitive and behavioural processes, including: Negative Valence Systems (fear, anxiety, frustration), Positive Valence Systems (motivation, reward, pleasure), Cognitive Systems (Attention, perception, learning), Social Processes (Communication, interpersonal interactions, attachment) and Arousal and Regulatory Systems (Sleep, wakefulness, stress response).</p> <p>Within each of these domains, specific dimensions, called constructs, capture key aspects of functioning. For example, ‚Äúreward anticipation‚Äù is a construct within the Positive Valence Systems domain. These constructs are importantly assessed through various units of analysis at different levels, such as neuroimaging (systems), cognitive tests (behavioural), or self-report surveys (social).</p> <p>Somewhat similarly, The HiTOP framework, aims to re-classify mental health classification by introducing a hierarchical organization of symptoms and behaviours. It does this by organizing symptoms into increasingly broader ‚Äúspectra‚Äù. It also focuses on the idea of a continuous rather than discrete framework of classification. Instead of discrete categories like ‚Äúbipolar disorder,‚Äù HiTOP uses continuous dimensions like ‚Äúinternalizing distress‚Äù or ‚Äúexternalizing disinhibition‚Äù to describe an individual‚Äôs profile. This is reflected in its transdiagnostic approach, where it recognizes that symptoms often overlap across traditional diagnoses. This reflects how similar symptoms can have different underlying causes in different people, blurring the lines between categories. Finally, also similar to RDoC, HiTOP considers evidence from various levels, including genes, brain circuits, behaviors, and subjective experiences, to create a comprehensive picture of mental health.</p> <p>The network theory is different from the HiTOP and RDoC, in that it also proposes a statistical framework. It does this by virtue of proposing that mental disorders are best represented by complex webs of interacting symptoms, which constitute individual nodes in a network. Subsequently, various nodes and networks influence each other more or less based upon their properties as dictated by graph theory, such as distance and complexity. Consequently, complex networks encompassing both symptomatic and social influences can describe how certain symptoms and factors affect one another. <br/> <br/></p> <h2 id="conclusion">Conclusion</h2> <p>Mental health has always been a difficult concept to classify, due to the underlying complexity and heterogeneity across individuals. In addition, unlike conventional diseases which you can see, and perform a range of viable biological tests, mental disorders are not so easily tested, nor is there an universal objective measure in assessment. Understanding the historical origins of diagnostic classification is an important topic for neuroscientists interested in psychiatry to consider, as whilst we may be relatively educated to test scientific theories, we should also understand the nature of what we are ultimately looking to treat. Whilst the ICD and DSM are still the primary method of diagnosis, stemming from its practicality, from a scientific perspective, taking a complex approach is becoming more and more influential. Only by understanding mental health in all its complexity, can we subsequently develop effective treatments. <br/> <br/></p> <h2 id="references">References</h2> <p>Adriaens, P. R., &amp; De Block, A. (2013). Why we essentialize mental disorders. Journal of Medicine and Philosophy, 38(2), 107-127.</p> <p>Borsboom, D. (2017). A network theory of mental disorders. World psychiatry, 16(1), 5-13.</p> <p>Debernardi, A., Sala, E., D‚ÄôAliberti, G., Talamonti, G., Franchini, A. F., &amp; Collice, M. (2010). Alcmaeon of croton. Neurosurgery, 66(2), 247-252.</p> <p>Ebert, A., &amp; B√§r, K. J. (2010). Emil Kraepelin: A pioneer of scientific understanding of psychiatry and psychopharmacology. Indian journal of psychiatry, 52(2), 191-192.</p> <p>Farr, C. B. (1944). Benjamin Rush and American psychiatry. American Journal of Psychiatry, 100(6), 2-2.</p> <p>Forbes, M. K., Neo, B., Nezami, O. M., Fried, E. I., Faure, K., Michelsen, B., ‚Ä¶ &amp; Dras, M. (2023). Elemental psychopathology: Distilling constituent symptoms and patterns of repetition in the diagnostic criteria of the DSM-5.</p> <p>Frampton, M. F. (1991). Aristotle‚Äôs cardiocentric model of animal locomotion. Journal of the History of Biology, 291-330.</p> <p>Insel, T., Cuthbert, B., Garvey, M., Heinssen, R., Pine, D. S., Quinn, K., ‚Ä¶ &amp; Wang, P. (2010). Research domain criteria (RDoC): toward a new classification framework for research on mental disorders. American Journal of psychiatry, 167(7), 748-751.</p> <p>Kendler, K. S. (2009). An historical framework for psychiatric nosology. Psychological medicine, 39(12), 1935-1941.</p> <p>Kendler, K. S., Zachar, P., &amp; Craver, C. (2011). What kinds of things are psychiatric disorders?. Psychological medicine, 41(6), 1143-1150.</p> <p>Kotov, R., Krueger, R. F., Watson, D., Achenbach, T. M., Althoff, R. R., Bagby, R. M., ‚Ä¶ &amp; Zimmerman, M. (2017). The Hierarchical Taxonomy of Psychopathology (HiTOP): A dimensional alternative to traditional nosologies. Journal of abnormal psychology, 126(4), 454.</p> <p>Marx, O. M. (1972). Wilhelm Griesinger and the history of psychiatry: a reassessment. Bulletin of the History of Medicine, 46(6), 519-544.</p>]]></content><author><name></name></author><category term="articles"/><category term="psychiatry,"/><category term="psychology,"/><category term="computational"/><category term="modeling,"/><category term="philosophy"/><summary type="html"><![CDATA[A quick review of classification methods in psychiatry]]></summary></entry><entry><title type="html">How to program efficiently using ChatGPT for psychology and neuroscience research</title><link href="https://sohaamir.github.io/blog/2023/chatgpt_and_psychology/" rel="alternate" type="text/html" title="How to program efficiently using ChatGPT for psychology and neuroscience research"/><published>2023-10-07T13:56:00+00:00</published><updated>2023-10-07T13:56:00+00:00</updated><id>https://sohaamir.github.io/blog/2023/chatgpt_and_psychology</id><content type="html" xml:base="https://sohaamir.github.io/blog/2023/chatgpt_and_psychology/"><![CDATA[<p><em>ChatGPT has exploded onto the social and academic sphere of influence. Amongst its many uses within academia is the ability to generate and analyse blocks of code in response to a user prompt. Such a transition from human-based feedback (e.g., GitHub, Stack Overflow) to AI-based feedback for code generation and correction has emphasized the need to provide efficient prompts. Levying anecdotal experience with generating code using ChatGPT in my own research, I briefly discuss simple rules for designing prompts in the field of psychology and neuroscience.</em></p> <h1 id="introduction">Introduction</h1> <p>The introduction of ChatGPT (GPT-3 in 2022 followed by GPT-4 in 2023) to the public sphere has left an immediate impact upon modern society in a short period of time, with the platform reaching one million users far quicker than any service prior. Due to the flexibility and variability in its use, ChatGPT has been integrated into many job sectors, including academia. However, this has come as both a benefit and a bane towards academic research and teaching. Whilst students and academics can undoubtedly benefit from its role as a publicly available academic tutor, available at any time to provide shortened and simplified explanations of complex topics, the very same feature can also provide templated answers for marked examinations, altering the very nature of academic learning and grading (Anders, 2023; Cotton et al., 2023; Rudolph et al., 2023). Simultaneously, it‚Äôs pervasive use as a source of information and ability to provide feedback towards elements of experimental design and analyses (e.g., power calculations) has raised the question of whether ChatGPT should be credited as an academic author, forcing a stance on this topic to be given from major publishing journals (Curtis, 2023; Liebrenz et al., 2023; Nature Editorials, 2023). <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/chagpt_popularity.png" alt="ChatGPT Popularity" width="600" height="225"/> </div> <p><br/> <strong>Interest in ChatGPT over time.</strong> <em>Figure taken from a Google Trend search for ‚ÄòChatGPT‚Äô within the last 12 months (Search conducted on the 26th of August 2023). Numbers represent search interest relative to the highest point on the chart for the given region and time. A value of 100 is the peak popularity for the term. A value of 50 means that the term is half as popular. A score of 0 means there was not enough data for this term.</em> <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/chatgpt_bar_chart.png" alt="ChatGPT Bar Chart" width="600" height="360"/> </div> <p><br/> <strong>Time for major online services to reach 1 million users.</strong> <em>Figure adapted by A.S. from an online version https://www.tooltester.com/en/blog/chatgpt-statistics/. Whilst Threads (a Twitter/X influenced platform from Meta) has since reached this milestone quicker than ChatGPT, it did so benefitting from an already prevalent user-base and brand.</em> <br/> <br/> A major influence on academic research is the ability of ChatGPT to provide workable code in response to a given prompt, and to debug faulty code given both the code and the associated error message, significantly improving programming efficiency. This is a consequence of the fundamental building block of ChatGPT, natural language processing (NLP), which enables the artificial intelligence (AI) algorithm to understand and process human language. Through a combination of machine learning algorithms and vast amounts of training data, the model learns patterns and relationships between words, phrases, and sentences, probabilistically selecting the next word within a generated response, time and time again. This same principle extends to programming languages by virtue of how both human and programming languages consist of their own syntax, grammar, and semantics. As ChatGPT recognises English, Italian, French and other cultural languages, it can generate blocks of code for a variety of programming languages including those most relevant to academics in the field of Psychology such as HTML, CSS, JavaScript, Julia, Python, and R. Such blocks of code are produced at a rate far beyond the capacity for human programmers. Whilst the working capacity of GPT-4 slows this production of code in comparison to GPT-3.5, sections of code are nevertheless generated in the order of seconds. Such a ‚Äòreal-time Stack Overflow‚Äô is a significant tool in the arsenal of any academic, particularly beginners in the field of psychology for which an unfamiliarity with programming severely lengthens facets of data analysis or experimental design requiring programming experience. Being in this category, I found ChatGPT to be extremely beneficial, both improving productivity whilst also increasing my conceptual knowledge in the subject, as ChatGPT also provides additional information regarding the specific functions of the code when producing it. <br/> <br/> However, whilst ChatGPT can provide meaningful code, it is not without fault. Indeed, whilst heralded as an academic ‚Äòpanacea‚Äô (Quintans-J√∫nior et al., 2023) it also provides unusual errors in response to basic prompts. An overview of such errors (Borji, 2023), designates twelve categories, including ‚ÄòReasoning‚Äô, ‚ÄòLogic‚Äô, ‚ÄòMath and Arithmetic‚Äô and indeed ‚ÄòCoding‚Äô. Examples of this latter category can stem from two sources, either from a limitation associated with the machinery to which ChatGPT provides code from any given prompt, or a limitation of the prompt given to ChatGPT from the user. <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/errors.png" alt="ChatGPT Errors" width="700" height="350"/> </div> <p><br/> <br/> <strong><em>Sources of user and model-related error in ChatGPT code generation.</em></strong> <em>User-related errors such as not including relevant information in the prompt can lead to faults suspected to be the cause of the model but can be circumvented by changing the prompt. On the other hand, model-related errors are a direct cause of the model itself. In the first example on the left, the second line of code is entirely unnecessary, whilst the error below reflects the common scenario where ChatGPT provides faulty code. The latter can subsequently be corrected by inputting the error back into ChatGPT. Examples of ‚Äòhallucinations‚Äô on the right provide examples where faulty logic gives an incorrect response. In these examples, ChatGPT fails to provide the correct answer to the first question, answering Elvis Presley (the correct answer is Elvis Perkins), fails to label 17077 as being a prime number and fails to provide the correct answer for the number of socks (40). It should be noted that ChatGPT is constantly improving its accuracy in this domain, see (Chen et al., 2023) for changing responses to the second example. The example for the first question is taken from (OpenAI, 2023), third from (Plevris et al., 2023).</em> <br/> <br/> Ultimately, an examination of GPT‚Äôs replies to 517 questions from Stack Overflow, revealed that 52% of ChatGPT‚Äôs answers contain inaccuracies and 77% are verbose. In addition, ChatGPT‚Äôs answers were found on the whole to be more incorrect, significantly lengthy, and not consistent with human answers half of the time (Kabir et al., 2023). The authors posit that this stems from ChatGPT‚Äôs incapability to understand the underlying context of the question being asked, as it was found to rarely make syntax errors for code answers. Such errors can be avoided by providing meaningful, tailored prompts to begin with. Of course if such faulty or inaccurate code is generated, this code can be inputted back into ChatGPT ad infinitum to eventually reach a solution, but such recursive programming can be unnecessary if the initial prompt given is of adequacy. The subject of this short paper is therefore to focus on providing efficient prompts through three simple rules, resulting in a more efficient workflow. Whilst I will be using real-world examples from my own experience as an academic in the field of psychology, these rules are also transferable to other scientific disciplines. <br/> <br/></p> <h1 id="detail-in-detail-out">Detail In, Detail Out</h1> <p>Despite ChatGPT‚Äôs ability to produce responses from basic prompts, its response is naturally limited by the information provided by the user. As noted in a recent discussion of ChatGPT‚Äôs potential as a programming support tool, this ‚Äúdepends on the user‚Äôs skill in giving instructions. The AI will not respond appropriately if user instructions are long, vague, or have lack of context‚Äù (Avila-Chauvet et al., 2023). Modifying the adage of ‚ÄòGarbage In, Garbage Out‚Äô, programming with GPT often reflects ‚ÄòDetail In, Detail Out‚Äô. Take the following example in which I had asked for a series of plots to be generated from some data that I had directly inputted into ChatGPT. Whilst the data itself was recognised; I had neglected to provide information regarding the filename. As such, ChatGPT defaulted to ‚Äòdata.csv‚Äô as the input. On another example, it defaulted to ‚Äúyour_file_path.csv‚Äù. This is a simplistic overview of a tendency to generalise, to which ChatGPT will default if not instructed otherwise. Relatedly, ChatGPT has also inferred from unspecific prompts, to produce the relevant code in Python, when R was preferred. <br/> <br/> The same principle also applies when debugging errors using feedback from ChatGPT. Solely providing the error message generated, in addition to the code can result in a solution, but a solution can be tailored to your specific problem by providing the actual structure of the data being acted upon. For example, specific data checks can be inferred where the data were previously inputted into ChatGPT. Such prompts are indeed possible without providing the data, but as prompted by the AI model itself, the more information that is provided, the more relevant the outputted code will be. And finally, the level of detail impacts how data is visualized. Akin to two artists, one asked simply to draw a face, versus another asked to draw a face of a happy 60-year old man, wearing glasses, with grey hair and a beard, the input given to ChatGPT significantly matters with providing relevant code in line with one‚Äôs request. Take the simple prompt below: <br/> <br/> <strong><em>Prompt:</em></strong> <br/> <em>Generate a graph in R, plotting height versus weight in a group of 20 males.</em> <br/> <br/> To which the resulting code produces the following graph: <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/height_1.png" alt="Height 1" width="600" height="300"/> </div> <p><br/> However, making a simple modification to the prompt can significantly affect how the data is presented. For example, adding the pretence to make the graph ‚Äúsuitable for a scientific publication‚Äù yields the following graph: <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/height_2.png" alt="Height 2" width="600" height="300"/> </div> <p><br/> Note the addition of several components, including adding a colour scheme to individual data points, a more detailed plot title, and a legend. Such a feature again builds upon the AI‚Äôs understanding on what a graph for a scientific publication generally constitutes, and so it should be used with additional specific prompts when generating graphs for this specific purpose. <br/> <br/> Another example is given where I prompted the creation of a single column csv file with the following instructions: <br/> <br/> <em>Generate a single-column csv file which has random values from 0-100 in each of the following rows: 1, 2, 4, 5, 8, 9, 11, 12, 15, 16, such that there is a gap of one between the first two pairs and a gap of two with the second two pairs. Continue to do this until the 348th row, which should also contain a number. Importantly, I would like for each pair of numbers to be the same. So, with the example above, 1 and 2 will be the same number, 4 and 5 the same, 8 and 9 the same and so on. Save this to a file called ‚Äòsingle_sub_scores.csv‚Äô.</em> <br/> <br/> Whilst I specifically mentioned that there should be a gap between those rows mentioned, the output generated instead did not have any gaps. <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/data_column_one.png" alt="Column One" width="60" height="250"/> </div> <p><br/> Subsequently, I provided an example directly into ChatGPT which contained the exact structure required, and even despite this, and the confidence in the response: <br/> <br/> <em>Ah, I see what you‚Äôre asking for now. Here‚Äôs a modified version of the R script that includes a gap (NA) after every second pair of numbers:</em> <br/> <br/> The output was still incorrect. The following prompt generated a structure very similar (but not quite correct) to what was intended: <br/> <br/> <em>That‚Äôs not correct, the structure of your outputted csv does not match the structure of the column which I provided. There should be a single gap between the first two columns, and then a gap of two, followed by a gap of one, etc.</em> <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/data_column_two.png" alt="Column Two" width="60" height="250"/> </div> <p><br/> After both the example column and the column generated above were both inputted back into ChatGPT, it still was unable to create the required column. I then repeated this once more. Even though it would understand the intended pattern: <br/> <br/> <em>The pattern should indeed be two numbers, one empty row, two numbers, two empty rows, and so on.</em> <br/> <br/> It still repeatedly provided the wrong code a few more times, before finally providing the correct code. <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/data_column_three.png" alt="Column Three" width="60" height="250"/> </div> <p><br/> This process, whilst significantly quicker than writing the code from scratch (for a programming novice I should mention), still took around 10-15 minutes to create. But how could one generate the correct code from a single prompt, and avoid repeatedly correcting ChatGPT? Well, simply asking ChatGPT for such a prompt provided the following: <br/> <br/> <em>‚ÄúGenerate a R script that creates a csv file named ‚Äòsingle_sub_scores.csv‚Äô with a single column of 348 rows. The rows should follow this pattern: two rows containing the same random number from 0 to 100, one empty row, two rows with another random number, two empty rows, and so on. The pattern should keep alternating between one and two empty rows. Empty rows should be represented as NA in R but should appear as empty cells in the resulting csv file when opened in Excel.‚Äù</em> <br/> <br/> Interestingly, the code generated significantly differs from the correct code provided earlier, with the inclusion of a function to generate the number sequences. Below, the original code is on the right, with the code generated from the prompt above on the left. <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/r_code.png" alt="R Code" width="700" height="300"/> </div> <p><br/> But the correct output was generated, albeit not as integers. <br/> <br/> In general therefore, one should provide the AI model with as much information as possible in the prompt. This is both to prevent generalisations in the case of ambiguity, and to increase the specificity of the code generated. Indeed, when asking ChatGPT if it would prefer to have such additional information regarding an issue it acknowledges the benefits of having specific information. <br/> <br/> <strong>Prompt</strong> <br/> <br/> <em>Let me know if you need information regarding the structure and/or contents of either item.location or MRS.</em> <br/> <br/> <strong>ChatGPT</strong> <br/> <br/> <em>Yes, that would be helpful. Please provide the structure and contents (at least some sample data if it‚Äôs too large) of item.location and MRS variables. Also, if you can provide information about the expected operation, i.e., what the projection operation should result in, that would be very helpful in finding a solution.</em> <br/> <br/> Such detail may indeed span multiple prompts (see below), however the benefits observed outweigh the additional effort. Ultimately, the following structure/questions may be useful when planning one‚Äôs own prompts: <br/></p> <ul> <li><strong>Background for the prompt‚Äôs motivation</strong> <ul> <li>Pre-text: Set the scene regarding your data. Describe your experimental design, methodologies, and statistical design (including programming language).</li> <li>Data: Describe the data. What data are you working/expecting to work with (i.e., neural, behavioural? What is the structure of the data?</li> </ul> </li> <li><strong>The prompt</strong> <ul> <li>Prompt Outputs: What should be generated from the prompt? Including additional details (e.g., filename, specificity of syntax) can result in a more tailored output.</li> </ul> </li> <li><strong>Feedback</strong> <ul> <li>Was the output generated in line with my needs? Provide specific feedback in the circumstance of AI-generated error or inaccuracy.</li> </ul> </li> </ul> <p><br/></p> <h1 id="rule-2--building-complex-scripts">Rule 2 ‚Äì Building complex scripts</h1> <p>Given the length and complexity of certain scripts, it may simply be unfeasible to provide a single minutely detailed prompt. Even though ChatGPT would eventually churn out the code in its entirety, a mistake would be propagated throughout, and any rectification would necessitate running the entire code from scratch, a time-consuming endeavour. Instead, separating code in chunks, and optimising each chunk in succession may be a useful strategy. Another example relates to the creation of a more complex script, where multiple relationships between parameters may be required. Such complex scripts can be difficult to initially visualise as a prompt but may instead be iteratively developed by setting a ‚Äòbasic environment‚Äô and subsequently adding layers of complexity. Take the following example where a simulated dataset was created for a metacognitive decision-making task, in which I aim to ultimately distinguish between behavior and choice amongst those with high and low trait-metacognition. In the first prompt, I set the basic overview of the task: <br/> <br/> <em>I have a hypothetical task, in which participants start with 100 points in the bank. The objective of the task is to gain as many points as they can. The task is a visual discrimination task, which is split into a number of blocks. Each block will be titrated to have the participant‚Äôs performance at a certain level. For example, block one will be titrated to have a score of 60% whilst block 2 will have 70%, block 3 at 50% etc.</em> <br/> <br/> <em>The values of the performance titration are not important however, just that it changes throughout the task. At the start of each block, we will measure the participants confidence, from a scale of 1-10. They will then have the option of placing a wager, which will again, be on a scale from 1-10 points. They will then complete the block, which will be titrated to a particular performance level. Finally, at the end of the block, they will be asked whether they would like to change their initial bet, which they can place from a scale of 1-10. We will run a total of 10 blocks. With this task in mind, please create a simulated dataset for a group of 30 participants.</em> <br/> <br/> The created dataset did not contain all my intended variables, and so I added more in the next two iterations: <br/> <br/> <em>I would now like to make some modifications to the task design. Before the pre_block_confidence for each block, I would like a measurement of how many points the person thinks they will gain or lose by the end of the block (pre_block_score_estimation). This will be on a scale from -10 to + 10. After each block, we will again measure confidence, but ‚Äòpost_block_confidence‚Äô contrasting with the already mentioned ‚Äòpre_block_confidence‚Äô. They will be measured in the same way, in a scale from 1-10. I will also measure their score estimation (post_block_score_estimation) at the end of each block, which will be before the post_block_confidence. I also would like to have some simulated scores at the end of each block, which follows the rules of the game, in that they can lose or gain a maximum of 10 points per trial, with 10 trials per block and 10 blocks in total.</em> <br/> <br/> <em>Now incorporate some additional relationships between confidence, wager, revised bet and estimated score, based upon differences one would see within a sample. For example, create data for 15 participants who are high-risk and have low metacognition, and 15 who are safe-betting and have high metacognition.</em> <br/> <br/> Importantly, ChatGPT pulls upon its vast knowledge base to project assumptions regarding the task onto the two hypothesized groups: <br/> <br/> Sure, to simulate the behavior of two groups of participants, we‚Äôll have to introduce more rules into the simulation. Here are some assumptions that I‚Äôll make to differentiate between the groups:</p> <ol> <li>High-risk participants with low metacognition: <ul> <li>Are more likely to make high wagers (8-10).</li> <li>Have a wider range of pre and post-block score estimations (-10 to +10).</li> <li>Are less accurate in their score estimations (deviation from actual block scores will be higher).</li> <li>Show no significant change in their wagers after completing the block (low metacognition).</li> </ul> </li> <li>Safe-betting participants with high metacognition: <ul> <li>Are more likely to make low wagers (1-3).</li> <li>Have a narrower range of pre and post-block score estimations (-3 to +3).</li> <li>Are more accurate in their score estimations (deviation from actual block scores will be lower).</li> <li>Show significant reduction in their wagers after a loss and increase after a win (high metacognition).</li> </ul> </li> </ol> <p>However, it is important that if simulating data featuring populations with specific facets of behaviour, that this behaviour is reflected in line with your a priori hypotheses. One such hypothesis in this instance related to the wagering post and pre-blocks, something not automatically inferred by ChatGPT, and so it was added in a subsequent prompt. <br/> <br/> <em>Adjust the behaviour of both groups such that those with higher metacognition are more likely to lower their post_block_wager compared to their pre_bet_wager if it is more difficult, and more likely to raise it, if it is easier. There will not be the case for those with low metacognition.</em> <br/> <br/> Ultimately, by chaining multiple prompts, I was successfully able to simulate a relatively complex dataset, which fit the purpose of simulating potential results of the study as part of a presentation to funders. Whilst single, lengthy prompts can be provided to build a stronger ‚Äòbase‚Äô to develop on, an iterative process is inevitable when creating complex scripts. <br/> <br/></p> <h1 id="rule-3--gpt-4-vs-gpt-35">Rule 3 ‚Äì GPT-4 vs GPT-3.5</h1> <p><br/> On March 14th 2023, OpenAI released GPT-4, the successor to GPT-3.5. Whilst the two models share a lot of common features, GPT-4 features a significantly larger architectural model size than its predecessors, including GPT-3. This increased model size ‚Äúhelps improve its natural language processing capabilities, resulting in more accurate and relevant responses‚Äù (Koubaa, 2023). However, conversely to previous versions, the specifics behind GPT-4‚Äôs architecture were not revealed to the community. Indeed, in their technical report for GPT-4, OpenAI explicitly state that: ‚ÄúGiven both the competitive landscape and the safety implications of large-scale models like GPT-4, this report contains no further details about the architecture (including model size), hardware, training compute, dataset construction, training method, or similar‚Äù (OpenAI, 2023). <br/> <br/> What is known from the technical report is that GPT-4 outperforms GPT-3.5 in a variety of academic and professional assessments, particularly so in the: <br/></p> <ul> <li>Uniform Bar Exam (90th percentile compared to the 10th percentile)</li> <li>LSAT (88th percentile compared to the 40th)</li> <li>SAT Math (89th percentile compared to the 70th)</li> <li>GRE Quantitative/Verbal (80th/99th percentile compared to the 25th/63rd)</li> </ul> <p>Included among these tests were a series of coding problems provided through LeetCode (an online platform that provides a collection of coding challenges) in which GPT-4 performed better than GPT-3.5 in all levels of difficulty, including:</p> <ul> <li>easy (31/41 problems solved compared to 12),</li> <li>medium (21/80 compared to 8), and</li> <li>hard (3/45 compared to 0).</li> </ul> <p>Given this clear improvement in performance, is there a benefit in using GPT-4 versus GPT-3.5 when programming in academia? From my experience, there is certainly an observable difference in the quality of the code generated. Take the earlier example where the following prompt was generated by ChatGPT to generate a specific pattern of numbers: <br/> <br/> <strong>Prompt:</strong> <br/> <br/> <em>‚ÄúGenerate a R script that creates a csv file named ‚Äòsingle_sub_scores.csv‚Äô with a single column of 348 rows. The rows should follow this pattern: two rows containing the same random number from 0 to 100, one empty row, two rows with another random number, two empty rows, and so on. The pattern should keep alternating between one and two empty rows. Empty rows should be represented as NA in R but should appear as empty cells in the resulting csv file when opened in Excel.‚Äù</em> <br/> <br/> <strong><em>GPT-3.5 vs GPT-4 ‚Äì End result of generated code</em></strong> <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/data_columns_four_and_five.png" alt="More R Columns" width="500" height="500"/> </div> <p><br/> Interestingly whilst neither are correct, only GPT-4 creates the correct pattern. However, there are certain examples in which GPT-4 demonstrates a clear advantage over GPT-3.5. Take the following prompt, again involving the subsetting of data: <br/> <br/> <em>I have the dataframe ‚Äòfinal_data_filtered‚Äô in R, which has the following structure:(data structure provided)</em> <br/> <br/> <em>I would like for you, for each Participant.Private.ID in rows where the column ‚ÄòMeasure‚Äô is ‚Äòrating‚Äô, to plot ‚ÄòResponse.pleasure‚Äô - ‚ÄòResponse.nutrition‚Äô against ‚ÄòResponse.value‚Äô. I would like for this to be plotted across the whole group (i.e., for all ‚ÄòParticipant.Private.ID‚Äô but also to plot the mean ‚ÄòResponse.pleasure‚Äô - ‚ÄòResponse.nutrition‚Äô against the mean ‚ÄòResponse.value‚Äô for each ‚ÄòParticipant.Private.ID‚Äô.</em> <br/> <br/> <em>Save the output as data frames so I can inspect them.</em> <br/> <br/> This is the corresponding data frame and plots for GPT-3.5 and GPT-4: <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/four_r_graphs.png" alt="R plots" width="700" height="700"/> </div> <p><br/> Note that whilst the individual level plots are the same (with GPT-3.5‚Äôs output even separating the different participants) only GPT-4 correctly creates the mean graphs for each participant, as seen in the graph on the right. <br/> <br/> Inaccuracies also are visible when simply relying on the processing of the LLM itself. When asked to provide a list of unique items within two sets of 420 items (with each 60 unique items repeated 7 times in succession), GPT-4 incorrectly states that there were 46 unique items in list 1, and 44 unique items in list 2, when in fact there were 60 unique items in both list. In addition, when asked to list items present in both lists, it only lists 12, when there are in fact 20 (something it can accurately determine using programming). <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/chatgpt_research/more_columns.png" alt="More R columns" width="600" height="330"/> </div> <p><br/> Another important factor concerning GPT-4 is that it is currently only available through a subscription to ChatGPT Plus, a $20 (or equivalent) monthly subscription where the user also gains unlimited access to GPT-3.5 (it is not available to unsubscribed users during peak usage). The question remains as whether GPT-4 is worth the price. In my opinion, GPT-3.5 does significantly well for more basic coding needs, and whilst GPT-4 is more accurate for more complex programming tasks, both versions have the same underlying flaws with logic and inference. When asked itself to provide some examples of these limitations, six were given, of which four were relevant for psychologists and/or neuroscientists, and in line with this paper‚Äôs message. <br/> <br/> <strong><em>Execution of Code:</em></strong> I can help generate code snippets based on the information provided, but I don‚Äôt have the ability to execute code or provide real-time debugging. This means <em>I can‚Äôt run your code, see what the output is, and make adjustments accordingly.</em></p> <p><strong><em>Real-time collaboration or pair programming:</em></strong> My responses are stateless, which means I don‚Äôt have the ability to remember past interactions. This can make back-and-forth collaboration more challenging, as <em>I won‚Äôt recall what was discussed or decided in earlier conversations.</em></p> <p><strong><em>Very complex, context-dependent tasks:</em></strong> While I can help with many coding tasks, <em>very complex tasks that require deep understanding of a specific project‚Äôs context or intricate knowledge of a codebase could be challenging for me.</em></p> <p><strong><em>Writing large, complex programs:</em></strong> While I can help with small code snippets and even functions or modules, <em>writing an entire complex software application with numerous interconnected parts is beyond my scope.</em> <br/> <br/></p> <h1 id="conclusion">Conclusion</h1> <p><br/> Programming is a necessary facet of academic research. The release of ChatGPT, with its ability to generate commented code in real-time in response to user-inputted prompts has in part shifted the necessity to learn the specific of coding, towards knowing how to provide efficient prompts to provide optimal code. Efficiency in this space is reflected by providing relevant information, asking the right questions, and choosing the right model. Doing so can reduce the primary limitations of inference and generalisation of ChatGPT when generating its response, a significant contribution towards incorrect code (Kabir et al., 2023). <br/> <br/></p> <h1 id="references">References</h1> <p>Anders, B. A. (2023). Is using ChatGPT cheating, plagiarism, both, neither, or forward thinking?. Patterns, 4(3).</p> <p>Avila-Chauvet, L., Mej√≠a, D., &amp; Acosta Quiroz, C. O. (2023). Chatgpt as a support tool for online behavioral task programming. Available at SSRN 4329020.</p> <p>Borji, A. (2023). A categorical archive of chatgpt failures. arXiv preprint arXiv:2302.03494.</p> <p>Chen, L., Zaharia, M., &amp; Zou, J. (2023). How is ChatGPT‚Äôs behavior changing over time?. arXiv preprint arXiv:2307.09009.</p> <p>Cotton, D. R., Cotton, P. A., &amp; Shipway, J. R. (2023). Chatting and cheating: Ensuring academic integrity in the era of ChatGPT. Innovations in Education and Teaching International, 1-12.</p> <p>Curtis, N. (2023). To ChatGPT or not to ChatGPT? The impact of artificial intelligence on academic publishing. The Pediatric Infectious Disease Journal, 42(4), 275.</p> <p>Editorials, N. (2023). Tools such as ChatGPT threaten transparent science; here are our ground rules for their use. Nature, 613(612), 10-1038.</p> <p>Kabir, S., Udo-Imeh, D. N., Kou, B., &amp; Zhang, T. (2023). Who Answers It Better? An In-Depth Analysis of ChatGPT and Stack Overflow Answers to Software Engineering Questions. arXiv preprint arXiv:2308.02312.</p> <p>Koubaa, A. (2023). GPT-4 vs. GPT-3.5: A concise showdown.</p> <p>Liebrenz, M., Schleifer, R., Buadze, A., Bhugra, D., &amp; Smith, A. (2023). Generating scholarly content with ChatGPT: ethical challenges for medical publishing. The Lancet Digital Health, 5(3), e105-e106.</p> <p>OpenAI. (2023). GPT-4 Technical Report. https://cdn.openai.com/papers/gpt-4.pdf</p> <p>Plevris, V., Papazafeiropoulos, G., &amp; Rios, A. J. (2023). Chatbots put to the test in math and logic problems: A preliminary comparison and assessment of ChatGPT-3.5, ChatGPT-4, and Google Bard. arXiv preprint arXiv:2305.18618.</p> <p>Quintans-J√∫nior, L. J., Gurgel, R. Q., Ara√∫jo, A. A. D. S., Correia, D., &amp; Martins-Filho, P. R. (2023). ChatGPT: the new panacea of the academic world. Revista da Sociedade Brasileira de Medicina Tropical, 56, e0060-2023.</p> <p>Rudolph, J., Tan, S., &amp; Tan, S. (2023). ChatGPT: Bullshit spewer or the end of traditional assessments in higher education?. Journal of Applied Learning and Teaching, 6(1).</p>]]></content><author><name></name></author><category term="articles"/><category term="machine"/><category term="learning,"/><category term="artifical"/><category term="intellligence,"/><category term="academia"/><summary type="html"><![CDATA[An article covering my experience and tips for using ChatGPT to aid programming]]></summary></entry><entry><title type="html">Setting up an academic website - a guide for absolute beginners</title><link href="https://sohaamir.github.io/blog/2023/setting_up_website/" rel="alternate" type="text/html" title="Setting up an academic website - a guide for absolute beginners"/><published>2023-10-01T13:56:00+00:00</published><updated>2023-10-01T13:56:00+00:00</updated><id>https://sohaamir.github.io/blog/2023/setting_up_website</id><content type="html" xml:base="https://sohaamir.github.io/blog/2023/setting_up_website/"><![CDATA[<p><em>Let‚Äôs say you just started a new position (maybe as a PhD student) and would like to create an academic website, as seems to be all the rage nowadays. However, are relatively new to programming, and are unsure on where to even get started. Creating a website can seem to be a daunting task, but the initial steps to creating a basic website is actually quite simple (even a numbskull like myself can do it!). This post will cover all of the steps that you need in order to create the base for an academic website using the academicpages template.</em> <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/typing.gif" alt="Typing GIF" width="500" height="250"/> <p style="text-align: center;"><em>Not all programmers work like this.</em></p> </div> <h1 id="choosing-which-website-template-works-for-you">Choosing which website template works for you</h1> <p>The first question that you should ask yourself is which template you would like to use. Two of the most popular options, at least when creating an ‚Äòacademic‚Äô website are the <a href="https://academicpages.github.io/">academicpages</a> template in Jekyll, or the <a href="https://academic-demo.netlify.app/">Academic Theme</a> in Hugo. If the words ‚ÄòJekyll‚Äô and ‚ÄòHugo‚Äô mean nothing (apart from a vague recollection of 19th century literature) then that‚Äôs ok! All you need to know is that the two look slightly different in their presentation, and that the set-up and maintenance of each website (in terms of programming) will be quite different. Both are very popular and so have plenty of guides and help available, however it is worth looking at each of the two before choosing which theme you would like.</p> <p>(Of course, selecting these two themes stem from my personal preference in having a more ‚Äòconventional‚Äô theme, there are plenty of other alternatives to choose from!)</p> <div style="display: flex; justify-content: center; align-items: center;"> <figure> <img src="/assets/img/posts/website_guide/hugo_main_page.png" alt="Hugo Page" width="400" height="225" style="margin-right: 20px;"/> <figcaption style="text-align: center;">The Hugo Academic theme</figcaption> </figure> <figure> <img src="/assets/img/posts/website_guide/jekyll_main_page.png" alt="Jekyll Page" width="400" height="225" style="margin-left: 20px;"/> <figcaption style="text-align: center;">The academicpages theme</figcaption> </figure> </div> <p>I ended up choosing the academicpages (Jekyll) theme, because I preferred the aesthetic, the set-up is relatively easier, and I think with Hugo the default is to have all website content on the same page, scrolling down to see additional ‚Äòpages‚Äô, whereas on the Jekyll template, pages are actual pages (I may be wrong, and you can certainly change this). So if you also end up going for the academicpages template, read on for a guide in how to set-up your own website!</p> <p>Before we get started, there are a number of great tutorials that you can use in tandem (and which my own borrows from), I would highly recommend checking them out as well!</p> <ul> <li><a href="https://jayrobwilliams.com/posts/2020/06/academic-website/">Building an Academic Website</a> by Rob Williams</li> <li><a href="https://www.youtube.com/watch?v=8lJhXJCUYCc&amp;t=79s">Easiest Way to Create the Perfect Academic Website</a> by Boris Meinhardus. Great video tutorial!</li> <li><a href="https://www.cross-validated.com/Personal-website-with-Minimal-Mistakes-Jekyll-Theme-HOWTO-Part-II/">Personal Website with Minimal Mistakes Jekyll Theme HOWTO</a> by Katerina Bosko. Useful for making little changes later on.</li> <li><a href="https://yutongj.github.io/how-to-build-a-website/How-to-personalize-your-website/">Customize your personal website</a> by Yutong Jin.</li> </ul> <p><br/></p> <h1 id="getting-started-with-github">Getting started with GitHub</h1> <p>The base structure for the academicpages website is hosted on GitHub which you can get to using the <a href="https://github.com/academicpages/academicpages.github.io">following link</a>. I assume that you will know whtat GitHub is, but if you don‚Äôt it‚Äôs basically a site where people host code. I would highly recommend making an account, not least because you‚Äôll need one to go any further in this tutorial! There are instructions on what to do on their GitHub page, but you need to fork the repository (clone the files) to your own profile. This means that any changes that you make will be on your own ‚Äòversion‚Äô and not the original.</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/github_fork.png" alt="GitHub fork" width="600" height="200"/> </div> <p><br/> So then you‚Äôll have you own local version of the website to work with. You then need to access this version on your own machine. I did this using <a href="https://desktop.github.com/">GitHub Desktop</a>, which connects to your GitHub account and allows you to open your chosen repository in whatever text editor that you like to use. I use <a href="https://code.visualstudio.com/">VS Code</a>, so I chose that. When you open the repository, it should look something like this:</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/github_repo.png" alt="GitHub repo" width="600" height="350"/> </div> <p><br/> This may look quite scary to start with, but you only need to make a few changes to create a basic website. On the left, you have the repository, and the middle will be whichever file you have open.</p> <h1 id="checking-changes-locally-with-bundler">Checking changes locally with Bundler</h1> <p>Technically you won‚Äôt need this until after you make changes, but it‚Äôs typically a good thing to get everything that you need installed and working beforehand. When you make changes to your website, you would like to have a ‚Äòpreview‚Äô of what the changes look like, before you ‚Äòcommit‚Äô them to your repository. It saves a lot of time and effort rather than commiting the changes each time. To do this, we need something called Bundler. <a href="https://bundler.io/">Bundler</a> is a package manager for Ruby, which is the programming language that Jekyll is written in. You can check if you have Ruby installed by running</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ruby <span class="nt">-v</span>
</code></pre></div></div> <p>And if you do not, install ruby using <a href="https://brew.sh/">Homebrew</a> by</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>ruby
</code></pre></div></div> <p>This may not happen to you, but when I did this, I got a permissions error:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR:  While executing gem ... <span class="o">(</span>Gem::FilePermissionError<span class="o">)</span>
    You don<span class="s1">'t have write permissions for the /Library/Ruby/Gems/2.6.0 directory.
</span></code></pre></div></div> <p>Which I fixed by creating a <code class="language-plaintext highlighter-rouge">.bundle</code> directory in the root of my website‚Äôs repository (e.g., for me <code class="language-plaintext highlighter-rouge">~/Documents/GitHub/sohaamir.github.io/</code>).</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> .bundle
<span class="nb">touch</span> .bundle/config
nano .bundle/config
</code></pre></div></div> <p>and then adding the following to the text file (Ctrl + O to save, Ctrl + X to exit):</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>BUNDLE_PATH: <span class="s2">"vendor/bundle"</span>
BUNDLE_BIN: <span class="s2">"vendor/bundle/bin"</span>
</code></pre></div></div> <p>You can then install bundle‚Ä¶</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div></div> <p>and check it has worked by running:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem list
</code></pre></div></div> <p>So, now all you have to do is to run‚Ä¶</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div> <p>which will give a server address that you can access your website locally.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Configuration file: /Users/aamirsohail/Documents/GitHub/sohaamir.github.io/_config.yml
To use retry middleware with Faraday v2.0+, <span class="nb">install</span> <span class="sb">`</span>faraday-retry<span class="sb">`</span> gem
            Source: /Users/aamirsohail/Documents/GitHub/sohaamir.github.io
       Destination: /Users/aamirsohail/Documents/GitHub/sohaamir.github.io/_site
 Incremental build: disabled. Enable with <span class="nt">--incremental</span>
      Generating... 
       Jekyll Feed: Generating feed <span class="k">for </span>posts
   GitHub Metadata: No GitHub API authentication could be found. Some fields may be missing or have incorrect data.
                    <span class="k">done in </span>6.073 seconds.
 Auto-regeneration: enabled <span class="k">for</span> <span class="s1">'/Users/aamirsohail/Documents/GitHub/sohaamir.github.io'</span>
    Server address: http://127.0.0.1:4000/
  Server running... press ctrl-c to stop.
</code></pre></div></div> <p>Importantly, this will update (after a few seconds) after any changes are saved on your local machine, without you needing to commit these changes to your repository. Wanted to change the size of your profile avatar but aren‚Äôt sure if it‚Äôs the correct size? Just paste the server address provided into your browser, make the changes, and refresh the page!</p> <h1 id="constructing-your-own-website">Constructing your own website</h1> <p>So, if all has gone smoothly ü§û you should now be able to open up the template page using bundle, which looks something like this:</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/academic_template.png" alt="Academic template" width="500" height="400"/> </div> <p><br/> Now you can actually go about personalizing your website üòä I won‚Äôt cover everything that I have done, simply because most of it is covered by the other guides linked above, but I will go over the basic structure of some of the changes that you can make, with some specific examples that have not been covered by the other guides.</p> <p><strong>Changing the colour of a toolbar icon</strong></p> <p>One aspect of the toolbar which I changed was the colour of the ORCID logo, which is black in it‚Äôs default setting. I actually wanted to have the official circular logo, but annoyingly I was unable to get it to work, so have settled on having the square logo. To make the colour change, all I had to do was to firstly copy this code into <code class="language-plaintext highlighter-rouge">_sass/_utilities.scss</code> directly below the last <code class="language-plaintext highlighter-rouge">/* social icons*/</code> entry.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  .ai-orcid,
  .ai-orcid-square <span class="o">{</span>
    color: <span class="nv">$orcid</span><span class="nt">-color</span><span class="p">;</span>
  <span class="o">}</span>
</code></pre></div></div> <p>I then went into <code class="language-plaintext highlighter-rouge">_sass/_variables.scss</code> and added an orcid brand with the respective colour.</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/orcid_colour.png" alt="orcid colour" width="400" height="500"/> </div> <p><br/> <strong>Adding a gif</strong></p> <p>The first thing which grabs people‚Äôs attention is the GIF of a brain (actually a GIF of my own White-matter nulled MPRAGE T1). To add a GIF, simply using the following code:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"float: right; margin-left: 10px;"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"/path/to/your/gif/here"</span> <span class="na">alt=</span><span class="s">"Brain GIF"</span> <span class="na">width=</span><span class="s">"x"</span> <span class="na">height=</span><span class="s">"y"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div> <p>And voila, you have your very own GIF!</p> <div style="display: flex; justify-content: center; align-items: center;"> <img src="/assets/img/posts/website_guide/brain_3_planes.gif" alt="Brain planes GIF" width="800" height="250"/> </div> <p><br/> <strong>Adding a Google Map</strong></p> <p>You may want to add a Google Map to demonstrate your current working address. To do so:</p> <ul> <li>Firstly find your location on Google maps,</li> <li>Click the ‚Äòshare‚Äô button across from the ‚ÄòDirections‚Äô button</li> <li>Select the ‚ÄòEmbed a map‚Äô tab and copy the HTML code</li> </ul> <div style="display: flex; justify-content: center; align-items: center;"> <img src="/assets/img/posts/website_guide/chbh_embed.png" alt="CHBH embed" width="600" height="600"/> </div> <ul> <li>Finally, just add the HTML code into the template:</li> </ul> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span>
  <span class="na">src=</span><span class="s">"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d9725.651522662583!2d-1.9272804!3d52.4535496!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4870bde470f7c04d%3A0x583b0469e1755681!2sCentre%20for%20Human%20Brain%20Health!5e0!3m2!1sen!2suk!4v1695917516555!5m2!1sen!2suk"</span> <span class="na">width=</span><span class="s">"850"</span> <span class="na">height=</span><span class="s">"450"</span> <span class="na">style=</span><span class="s">"border:0;"</span> <span class="na">allowfullscreen=</span><span class="s">""</span> <span class="na">loading=</span><span class="s">"lazy"</span> <span class="na">referrerpolicy=</span><span class="s">"no-referrer-when-downgrade"</span><span class="nt">&gt;&lt;/iframe&gt;</span>  
<span class="nt">&lt;br&gt;</span>
</code></pre></div></div> <p><br/> <strong>Adding your CV</strong></p> <p>In the tabs section at the top of your website, there is one for your ‚ÄòCV‚Äô. The default version I believe is to have your CV formatted into the website as any other post. However, we often put a lot of effort into our CV‚Äôs and would prefer to have the electronic version available. Thanksfully, this is easy to do.</p> <p>Firstly, if you go to <code class="language-plaintext highlighter-rouge">_data/navigation.yml</code> you can see all of the tabs that are defaulted in the website. To add your own CV and to have it open when opening the ‚ÄòCV‚Äô tab, you need to firstly upload your CV to the <code class="language-plaintext highlighter-rouge">files</code> subfolder. You then need to modify the <code class="language-plaintext highlighter-rouge">navigation.yml</code> file to tell it that you want to open up your CV. You can do this by writing the following for that section:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  - title: "CV"
    url: /files/your_example.cv.pdf
</code></pre></div></div> <p>Importantly, this file can be used to change (or remove various tabs which aren‚Äôt relevant). For example, I decided to rename ‚ÄòPortfolio‚Äô to ‚ÄòResearch‚Äô and to comment out some tabs which aren‚Äôt relevant.</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>main:
  - title: "Research"
    url: /portfolio/

 # - title: "Publications"
 #   url: /publications/

  - title: "Blog Posts"
    url: /year-archive/

  - title: "CV"
    url: /files/academic_cv.pdf

 # - title: "Talks"
 #   url: /talks/    

 # - title: "Teaching"
 #   url: /teaching/    
    
 # - title: "Guide"
 #   url: /markdown/
</code></pre></div></div> <p><br/> <strong>Changing your favicon</strong></p> <p>What on earth is a favicon? Isn‚Äôt that some type of Pokemon? Well, have you ever noticed in your browser, that there is often a little icon in the tab for each website? Well, that is called a favicon. It probably won‚Äôt be recognised by the visitors to your website, but I think changing the favicon to something more personalized is a nice touch. Here is how you can do it.</p> <p>Firstly, you need to find an image (preferably with no background). You then need to use a favicon generator (I used <a href="https://realfavicongenerator.net/">realfavicongenerator.net</a>). It demos what your favicon will look like on your website which can be handy, not least because if there is a background, it will show up.</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/favicon_website.png" alt="favicon website" width="600" height="300"/> </div> <p><br/> Scrolling down to the bottom of that page, you can then generate your favicon package. You can then extract it to folder called <code class="language-plaintext highlighter-rouge">favicon</code> in the <code class="language-plaintext highlighter-rouge">/assets/img</code> folder of your repository. Then open up <code class="language-plaintext highlighter-rouge">_includes/head/custom.html</code>and copy the following code:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- start custom head snippets --&gt;</span>

<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"apple-touch-icon"</span> <span class="na">sizes=</span><span class="s">"180x180"</span> <span class="na">href=</span><span class="s">"/assets/img/favicon/apple-touch-icon.png?v=M44lzPylqQ"</span><span class="nt">&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"icon"</span> <span class="na">type=</span><span class="s">"image/png"</span> <span class="na">sizes=</span><span class="s">"32x32"</span> <span class="na">href=</span><span class="s">"/assets/img/favicon/favicon-32x32.png?v=M44lzPylqQ"</span><span class="nt">&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"icon"</span> <span class="na">type=</span><span class="s">"image/png"</span> <span class="na">sizes=</span><span class="s">"16x16"</span> <span class="na">href=</span><span class="s">"/assets/img/favicon/favicon-16x16.png?v=M44lzPylqQ"</span><span class="nt">&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"manifest"</span> <span class="na">href=</span><span class="s">"/assets/img/favicon/site.webmanifest?v=M44lzPylqQ"</span><span class="nt">&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"mask-icon"</span> <span class="na">href=</span><span class="s">"/assets/img/favicon/safari-pinned-tab.svg?v=M44lzPylqQ"</span> <span class="na">color=</span><span class="s">"#5bbad5"</span><span class="nt">&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"msapplication-TileColor"</span> <span class="na">content=</span><span class="s">"#da532c"</span><span class="nt">&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"theme-color"</span> <span class="na">content=</span><span class="s">"#ffffff"</span><span class="nt">&gt;</span>

<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"/assets/css/academicons.css"</span><span class="nt">/&gt;</span>

...
<span class="c">&lt;!-- end custom head snippets --&gt;</span>
</code></pre></div></div> <p>And that‚Äôs it! You should have a new favicon, the image that you selected earlier. Was it worth it? Probably. <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/favicon_tab.png" alt="favicon tab" width="400" height="40"/> </div> <p><br/><br/> <strong>Contact Forms</strong></p> <p>The final guide that I will cover is adding a contact form which people can actually use to contact an email address. To do this, you need a server to process the HTML forms for us. I ended up using <a href="https://formspree.io/">Formspree</a> but there are others available. Through Formspree, once you create an account and a form, it will generate some HTML code for you to paste in your website. For me, the code looked like this:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- modify this form HTML and place wherever you want your form --&gt;</span>
<span class="nt">&lt;form</span>
  <span class="na">action=</span><span class="s">"https://formspree.io/f/xpzgowwz"</span>
  <span class="na">method=</span><span class="s">"POST"</span>
<span class="nt">&gt;</span>
  <span class="nt">&lt;label&gt;</span>
    Your email:
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;label&gt;</span>
    Your message:
    <span class="nt">&lt;textarea</span> <span class="na">name=</span><span class="s">"message"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
  <span class="c">&lt;!-- your other form fields go here --&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span><span class="nt">&gt;</span>Send<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div> <p>Whilst the action URL will be different, everything else should be the same. All you have to do now is to copy this code into whichever page you want the form to be presented and that‚Äôs it! The only additional change I made was to add a third box where the person‚Äôs name can be recorded. So, my form looks like this:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span>
  <span class="na">action=</span><span class="s">"https://formspree.io/f/xpzgowwz"</span>
  <span class="na">method=</span><span class="s">"POST"</span>
<span class="nt">&gt;</span>
  <span class="nt">&lt;label&gt;</span>
    Your name:
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"name"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;label&gt;</span>
    Your email:
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;label&gt;</span>
    Your message:
    <span class="nt">&lt;textarea</span> <span class="na">name=</span><span class="s">"message"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
  <span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span><span class="nt">&gt;</span>Send message<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div> <p>Subsequently, whenever someone fills out my form, I get an email with the following:</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/formspree_email.png" alt="formspree email" width="500" height="300"/> </div> <p><strong>Other useful tips already covered in other guides</strong></p> <p>There are a few more changes that I made, but using guides that already exist. I would highly recommend checking them out if you would like to do the same. These are listed above, but one specific aspect that I would highlight is with changing profile avatar and the size of your name. If you want to change the size/shape of your profile avatar and the size of your name immediately below, see <a href="https://www.cross-validated.com/Personal-website-with-Minimal-Mistakes-Jekyll-Theme-HOWTO-Part-II/">Personal Website with Minimal Mistakes Jekyll Theme HOWTO</a> by Katerina Bosko. There are also many other useful customizations covered on her page. <br/></p> <h1 id="committing-your-changes-with-git">Committing your changes with git</h1> <p>Ok, so you‚Äôve been hard at work making all of these customizations, you‚Äôve checked through bundle that you are happy with these changes, and would now like to make them ‚Äòofficial‚Äô so-to-speak. This is very simple to do using <a href="https://git-scm.com/">Git</a>. Again, the fact that you have been using GitHub should mean that Git is no stranger, but just for convienience, Git is the fundamental tool for version control, which GitHub uses to provide remote hosting for Git repositories. So, because you have made the changes on your local machine, you can use Git to ‚Äòcommit‚Äô these changes to the repository hosted on GitHub. You just need to run the following commands from your website‚Äôs root:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git status
git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s1">'describe changes made here'</span>
git push origin
</code></pre></div></div> <p>And that‚Äôs it! Your GitHub repository should then update with your local changes (it may take a minute). You can then see the latest version of your website by selecting your repository on your GitHub page, choosing the ‚ÄòActions‚Äô tab, clicking on the most recent deployment and clicking your github.io link.</p> <div style="text-align: center;"> <img src="/assets/img/posts/website_guide/github_screenshot.png" alt="GitHub screenshot" width="550" height="300"/> </div> <p><br/></p> <p><em>N.B If you are wondering why this guide is for the academicpages theme when I am currently using the al-folio theme, then yes I ended up changing my mind after initially making my website in the former ü§¶</em></p> <p>Image credits:</p> <p class="small-text"> Bruce Almighty GIF: Tom Shadyac, et al. ¬© BRUCE ALMIGHTY. USA, 2003. GIF provided by <a href="https://tenor.com/en-GB/view/bruce-almighty-jim-carrey-type-typing-fast-gif-4271405">Tenor</a> </p> <p class="small-text"> Screenshots: <a href="https://lakemper.eu/">Michael Schlottke-Lakemper</a>, <a href="https://jayrobwilliams.com/">Rob Williams</a>, <a href="https://github.com/academicpages/academicpages.github.io">Academic Pages</a> ¬© 2016 Michael Rose and released under the MIT License. </p>]]></content><author><name></name></author><category term="tutorials"/><category term="programming,"/><category term="website"/><category term="design"/><summary type="html"><![CDATA[How to set up a website using Jekyll and GitHub Pages]]></summary></entry><entry><title type="html">Once a CINNer, always a CINNer</title><link href="https://sohaamir.github.io/blog/2023/cinn_goodbye/" rel="alternate" type="text/html" title="Once a CINNer, always a CINNer"/><published>2023-09-28T13:56:00+00:00</published><updated>2023-09-28T13:56:00+00:00</updated><id>https://sohaamir.github.io/blog/2023/cinn_goodbye</id><content type="html" xml:base="https://sohaamir.github.io/blog/2023/cinn_goodbye/"><![CDATA[<p>I am retrospectively writing this from the CHBH üåö but I thought I would write a quick post saying goodbye to all the CINNers at the University of Reading who supported me over the past two-and-a-half-years. I honestly learned so much and am extremely grateful for everything! I look forward to keeping you updated with my PhD and getting our projects published! üéÜ</p> <p>Best,<br/> Aamir <br/> <br/></p> <div style="text-align: center;"> <img src="/assets/img/posts/cinn_goodbye/cinn_goodbye.jpeg" alt="CINN Goodbye" width="700" height="320"/> </div> <p><br/> <em>People (clockwise from left to right): Phoenix Byrne, Brendan Williams, Gabriella Rossetti (hidden üò¢), Zola Dean, Charlenne Ordonez, Anastasiya Savchenko, Anastasia Christakou, Me, Rich Harrison, Claudia Rodriguez-Sobstel.</em></p>]]></content><author><name></name></author><category term="blog"/><category term="cinn,"/><category term="goodbye"/><summary type="html"><![CDATA[Saying goodbye to CINN after 2 and a half years!]]></summary></entry></feed>